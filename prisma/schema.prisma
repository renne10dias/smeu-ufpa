// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// npx prisma db push

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  @@map("tb_users")
  uuid           String    @id @default(uuid()) @map("uuid")
  name           String    @map("name")
  surname        String    @map("surname")
  email          String    @map("email")
  passwordHash   String    @map("password_hash")
  createdAt      DateTime  @map("created_at")
  activated      Boolean   @map("activated")
  userTypeId     String    @unique @map("tb_user_types_uuid")
  userType       UserType  @relation(fields: [userTypeId], references: [uuid])
  reservations   Reservation[]

  @@index([userTypeId])
}

model UserType {
  @@map("tb_user_types")
  uuid        String  @id @default(uuid()) @map("uuid")
  typeUser    String  @map("type_user")
  users       User[]

  @@index([uuid])
}

model Reservation {
  @@map("tb_reservations")
  uuid           String       @id @default(uuid()) @map("uuid")
  startDate      DateTime     @map("start_date")
  endDate        DateTime     @map("end_date")
  status         String       @map("status")
  details        String?      @map("details")
  createdAt      DateTime     @map("created_at")
  spaceId        String       @map("tb_spaces_uuid")
  userId         String       @map("tb_users_uuid")
  shiftId        String       @map("tb_shift_uuid")
  user           User         @relation(fields: [userId], references: [uuid])
  space          Space        @relation(fields: [spaceId], references: [uuid])
  shift          Shift        @relation(fields: [shiftId], references: [uuid])
  daySchedules   DaySchedule[]

  @@index([spaceId])  
  @@index([userId])
  @@index([shiftId])
}

model Space {
  @@map("tb_spaces")
  uuid             String       @id @default(uuid()) @map("uuid")
  name             String       @map("name")
  location         String       @map("location")
  capacity         Int          @map("capacity")
  type             String       @map("type")
  equipment        String?      @map("equipment")
  activityStatus   Boolean      @map("activity_status")
  reservations     Reservation[]

  @@index([uuid])
}

model Shift {
  @@map("tb_shift")
  uuid           String       @id @default(uuid()) @map("uuid")
  nameShift      String       @map("name_shift")
  reservations   Reservation[]

  @@index([uuid])
}

model DaySchedule {
  @@map("tb_day_schedules")
  uuid          String     @id @default(uuid()) @map("uuid")
  startTime     DateTime   @map("start_time")
  endTime       DateTime   @map("end_time")
  bookingDate   DateTime   @map("booking_date")
  reservationId String     @map("tb_reservations_uuid")
  reservation   Reservation @relation(fields: [reservationId], references: [uuid])

  @@index([reservationId])
}

model Notification {
  @@map("notifications")
  uuid       String   @id @default(uuid()) @map("uuid")
  type       String   @map("type")
  sendDate   DateTime @map("send_date")
  status     String   @map("status")
}
